import type { Args, ComponentAnnotations as BaseComponentAnnotations, StoryAnnotations as BaseStoryAnnotations, StoryContext as BaseStoryContext, WebRenderer } from '@storybook/types';
import type { Component, ComponentProps, Snippet } from 'svelte';
import type { Primitive, SetOptional, Simplify } from 'type-fest';
import type Story from './runtime/Story.svelte';
export type Cmp = Component<any>;
export type CmpOrArgs = Cmp | Args;
/**
 * Metadata to configure the stories for a component.
 *
 * @see [Default export](https://storybook.js.org/docs/formats/component-story-format/#default-export)
 */
export type Meta<TCmp extends Cmp> = ComponentAnnotations<TCmp>;
export type ComponentAnnotations<TCmpOrArgs extends CmpOrArgs> = BaseComponentAnnotations<SvelteRenderer<TCmpOrArgs>, InferArgs<TCmpOrArgs>>;
export interface SvelteRenderer<TCmpOrArgs extends CmpOrArgs> extends WebRenderer {
    component: TCmpOrArgs extends Cmp ? TCmpOrArgs : Component<TCmpOrArgs>;
    storyResult: SvelteStoryResult<TCmpOrArgs>;
}
export interface SvelteStoryResult<TCmpOrArgs extends CmpOrArgs> {
    Component?: TCmpOrArgs extends Cmp ? TCmpOrArgs : Component<TCmpOrArgs>;
    props?: TCmpOrArgs extends Cmp ? ComponentProps<TCmpOrArgs> : TCmpOrArgs;
    decorator?: TCmpOrArgs extends Cmp ? TCmpOrArgs : Component<TCmpOrArgs>;
}
export type MapSnippetsToAcceptPrimitives<Props extends Args> = {
    [ArgKey in keyof Props]: Props[ArgKey] extends Snippet ? Snippet | Primitive : Props[ArgKey];
};
type InferArgs<TCmpOrArgs extends CmpOrArgs> = MapSnippetsToAcceptPrimitives<TCmpOrArgs extends Cmp ? ComponentProps<TCmpOrArgs> : TCmpOrArgs>;
export type StoryContext<TCmp extends Cmp = Cmp, TMeta extends Meta<TCmp> = Meta<TCmp>> = BaseStoryContext<SvelteRenderer<TCmp>, Simplify<TCmp extends Cmp ? ComponentProps<TCmp> : TCmp>>;
export type StoryCmp<TOverrideArgs extends Args = Args, TCmp extends Cmp = Cmp, TMeta extends Meta<TCmp> = Meta<TCmp>> = typeof Story<TOverrideArgs, TCmp, TMeta>;
export type StoryAnnotations<TCmp extends Cmp, TMeta extends Meta<TCmp>> = BaseStoryAnnotations<SvelteRenderer<TCmp>, InferArgs<TCmp>, Simplify<SetOptional<InferArgs<TCmp>, keyof InferArgs<TCmp>>>>;
export {};
