import type { Args } from '@storybook/types';
import type { Cmp, Meta } from '#types';
declare function buildContext<TOverrideArgs extends Args, TCmp extends Cmp, TMeta extends Meta<TCmp>>(): {
    readonly template: any;
    set: (snippet?: any) => void;
};
type StoriesTemplateContext<TOverrideArgs extends Args, TCmp extends Cmp, TMeta extends Meta<TCmp>> = ReturnType<typeof buildContext<TOverrideArgs, TCmp, TMeta>>;
export declare function useStoriesTemplate<TOverrideArgs extends Args, TCmp extends Cmp, TMeta extends Meta<TCmp>>(): any;
export declare function setTemplate<TOverrideArgs extends Args, TCmp extends Cmp, TMeta extends Meta<TCmp>>(snippet?: StoriesTemplateContext<TOverrideArgs, TCmp, TMeta>['template']): void;
export {};
