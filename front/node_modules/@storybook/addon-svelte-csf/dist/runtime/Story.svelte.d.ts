import type { Args } from '@storybook/types';
import type { Cmp, Meta } from '#types';
declare class __sveltets_Render<const TOverrideArgs extends Args, const TCmp extends Cmp, TMeta extends Meta<TCmp>> {
    props(): any;
    events(): {};
    slots(): {};
    bindings(): "";
    exports(): {};
}
interface $$IsomorphicComponent {
    new <const TOverrideArgs extends Args, const TCmp extends Cmp, TMeta extends Meta<TCmp>>(options: import('svelte').ComponentConstructorOptions<ReturnType<__sveltets_Render<TOverrideArgs, TCmp, TMeta>['props']>>): import('svelte').SvelteComponent<ReturnType<__sveltets_Render<TOverrideArgs, TCmp, TMeta>['props']>, ReturnType<__sveltets_Render<TOverrideArgs, TCmp, TMeta>['events']>, ReturnType<__sveltets_Render<TOverrideArgs, TCmp, TMeta>['slots']>> & {
        $$bindings?: ReturnType<__sveltets_Render<TOverrideArgs, TCmp, TMeta>['bindings']>;
    } & ReturnType<__sveltets_Render<TOverrideArgs, TCmp, TMeta>['exports']>;
    <const TOverrideArgs extends Args, const TCmp extends Cmp, TMeta extends Meta<TCmp>>(internal: unknown, props: ReturnType<__sveltets_Render<TOverrideArgs, TCmp, TMeta>['props']> & {}): ReturnType<__sveltets_Render<TOverrideArgs, TCmp, TMeta>['exports']>;
    z_$$bindings?: ReturnType<__sveltets_Render<any, any, any>['bindings']>;
}
declare const Story: $$IsomorphicComponent;
type Story<const TOverrideArgs extends Args, const TCmp extends Cmp, TMeta extends Meta<TCmp>> = InstanceType<typeof Story<TOverrideArgs, TCmp, TMeta>>;
export default Story;
