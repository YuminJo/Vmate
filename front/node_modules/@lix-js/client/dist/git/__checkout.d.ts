/**
 * @param {object} args
 * @param {import("../../vendored/isomorphic-git/index.js")._FileSystem} args.fs
 * @param {any} args.cache
 * @param {import('../../vendored/isomorphic-git/index.js').ProgressCallback} [args.onProgress]
 * @param {string} args.dir
 * @param {string} args.gitdir
 * @param {string} args.ref
 * @param {string[]} [args.filepaths]
 * @param {string} args.remote
 * @param {boolean} args.noCheckout
 * @param {boolean} [args.noUpdateHead]
 * @param {boolean} [args.dryRun]
 * @param {boolean} [args.force]
 * @param {boolean} [args.track]
 *
 * @returns {Promise<void>} Resolves successfully when filesystem operations are complete
 *
 */
export function __checkout({ fs, cache, onProgress, dir, gitdir, remote, ref, filepaths, noCheckout, noUpdateHead, dryRun, force, track, }: {
    fs: import("../../vendored/isomorphic-git/index.js")._FileSystem;
    cache: any;
    onProgress?: import("../../vendored/isomorphic-git/index.js").ProgressCallback | undefined;
    dir: string;
    gitdir: string;
    ref: string;
    filepaths?: string[] | undefined;
    remote: string;
    noCheckout: boolean;
    noUpdateHead?: boolean | undefined;
    dryRun?: boolean | undefined;
    force?: boolean | undefined;
    track?: boolean | undefined;
}): Promise<void>;
//# sourceMappingURL=__checkout.d.ts.map