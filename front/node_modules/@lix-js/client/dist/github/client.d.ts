export declare function makeGithubClient({ gitHubProxyUrl }?: {
    gitHubProxyUrl?: string;
}): {
    getInstallations: () => Promise<{
        installations: Record<string, any>[];
    } | {
        error: Error;
    }>;
    getAvailableRepos: (installation_id: number) => Promise<{
        repositories: Record<string, any>[];
    } | {
        error: Error;
    }>;
    getRepo: (arg: {
        owner: string;
        repoName: string;
    }) => Promise<Record<string, any> | {
        error: Error;
    }>;
    createFork: (arg: {
        owner: string;
        repo: string;
    }) => Promise<Record<string, any>>;
    mergeUpstream: ({ branch, owner, repoName, }: {
        branch: string;
        owner: string;
        repoName: string;
    }) => Promise<Record<string, any>>;
    compare: ({ owner, repoName, base, head, }: {
        owner: string;
        repoName: string;
        base: string;
        head: string;
    }) => Promise<Record<string, any>>;
};
//# sourceMappingURL=client.d.ts.map