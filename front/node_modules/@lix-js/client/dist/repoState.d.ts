import type { RepoContext } from "./repoContext.js";
import type { NodeishFilesystem } from "@lix-js/fs";
export type RepoState = Awaited<ReturnType<typeof repoState>>;
export declare function repoState(ctx: RepoContext, args: {
    branch?: string;
    sparseFilter?: (entry: {
        filename: string;
        type: "file" | "folder" | "symlink";
    }) => boolean;
}): Promise<{
    ensureFirstBatch: (arg?: {
        preload?: string[];
    }) => Promise<void>;
    pending: Promise<void | {
        error: Error;
    }> | undefined;
    nodeishFs: NodeishFilesystem;
    checkedOut: Set<string>;
    branchName: string | undefined;
    currentRef: string;
    defaultBranch: string;
    sparseFilter: typeof args.sparseFilter;
}>;
//# sourceMappingURL=repoState.d.ts.map