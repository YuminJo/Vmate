import { LanguageTag, Message } from '@inlang/sdk';
import { Params } from './paramsType.js';

type Resource = {
    /**
     * The original message
     */
    source: Message;
    /**
     * The parameters needed for this message
     */
    params: Params;
    /**
     * The index-message function for this message
     */
    index: string;
    /**
     * The message-function for each language
     */
    translations: {
        [languageTag: string]: string;
    };
};
/**
 * Returns the compiled messages for the given message.
 *
 * @example
 *   {
 *      index: "export const hello_world = (params) => { ... }",
 *      en: "export const hello_world = (params) => { ... }",
 *      de: "export const hello_world = (params) => { ... }",
 *   }
 *
 * @param message The message to compile
 * @param lookupTable A table that maps language tags to their fallbacks.
 */
export declare const compileMessage: (message: Message, fallbackMap: Record<LanguageTag, LanguageTag | undefined>, output?: "regular" | "message-modules") => Resource;
export {};
