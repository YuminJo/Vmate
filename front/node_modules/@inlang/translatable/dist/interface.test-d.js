import { expectType } from "tsd";
const tag = "en";
/**
 * --------------------- INCREMENTALLY ADOPTABLE ---------------------
 *
 * Translatable should be incrementally adoptable.
 * Hence, it should be possible to define a Type
 * that is later changed to Translatable<Type>
 * without breaking current code.
 */
const value = "Hello world";
const incrementallyAdoptable = value;
// a translatable coming from an external source
// is unknown whether the type is a string or a Translatable<string>
const externalTranslatable = "";
// @ts-expect-error - unknown whether external translatable is a string
expectType(externalTranslatable);
// @ts-expect-error - unknown whether external translatable is a record
expectType(externalTranslatable.en);
typeof externalTranslatable === "string" && expectType(externalTranslatable);
typeof externalTranslatable === "object" && expectType(externalTranslatable.en);
typeof externalTranslatable === "object" &&
    expectType(externalTranslatable[tag]);
typeof externalTranslatable === "object" &&
    expectType(externalTranslatable[tag] ?? externalTranslatable.en);
const val = typeof externalTranslatable === "object"
    ? externalTranslatable[tag] ?? externalTranslatable.en
    : externalTranslatable;
// --------------------- TESTING A TRANSLATABLE<T extends not String> ---------------------
// Translatable v1.0 only supports strings. Upon user requests, we might add support for
// other types in the future. This test ensures that the type is not yet supported.
// @ts-expect-error - Translatable<T> requires T to be a string for now
let translationsObject;
// @ts-expect-error - Translatable<T> requires T to be a string for now
let translatableArray;
/**
 * --------------------- TRANSLATABLE<TYPE> USAGE TEST ---------------------
 */
const translations = {
    en: "Hello world",
    de: "Hallo Welt",
};
expectType(translations.en);
expectType(translations);
expectType(translations[tag]);
expectType(translations[tag] ?? translations.en);
/**
 * --------------------- TYPE USAGE TEST ---------------------
 */
const value2 = "Hello world";
expectType(value2);
expectType(value2);
// @ts-expect-error - value2 is a string
value2[tag];
// @ts-expect-error - value2 is a string
translations[tag] ?? value2.en;
