import { MessageLintRule } from "@inlang/message-lint-rule";
import { Plugin } from "@inlang/plugin";
/**
 * An inlang module has a default export that is either a plugin or a message lint rule.
 *
 * @example
 *   export default myPlugin
 */
export type InlangModule = {
    default: Plugin | MessageLintRule;
};
export declare const InlangModule: import("@sinclair/typebox").TObject<{
    default: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TObject<{
        id: import("@sinclair/typebox").TTemplateLiteral<[import("@sinclair/typebox").TLiteral<`plugin.${string}.${string}`>]>;
        displayName: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TIntersect<[import("@sinclair/typebox").TObject<{
            en: import("@sinclair/typebox").TString;
        }>, import("@sinclair/typebox").TRecord<import("@sinclair/typebox").TString, import("@sinclair/typebox").TString>]>]>;
        description: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TIntersect<[import("@sinclair/typebox").TObject<{
            en: import("@sinclair/typebox").TString;
        }>, import("@sinclair/typebox").TRecord<import("@sinclair/typebox").TString, import("@sinclair/typebox").TString>]>]>;
        settingsSchema: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{}>>;
        loadMessages: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TAny>;
        saveMessages: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TAny>;
        detectedLanguageTags: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TAny>;
        addCustomApi: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TAny>;
    }>, import("@sinclair/typebox").TObject<{
        id: import("@sinclair/typebox").TTemplateLiteral<[import("@sinclair/typebox").TLiteral<`messageLintRule.${string}.${string}`>]>;
        displayName: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TIntersect<[import("@sinclair/typebox").TObject<{
            en: import("@sinclair/typebox").TString;
        }>, import("@sinclair/typebox").TRecord<import("@sinclair/typebox").TString, import("@sinclair/typebox").TString>]>]>;
        description: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TIntersect<[import("@sinclair/typebox").TObject<{
            en: import("@sinclair/typebox").TString;
        }>, import("@sinclair/typebox").TRecord<import("@sinclair/typebox").TString, import("@sinclair/typebox").TString>]>]>;
        settingsSchema: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{}>>;
    }>]>;
}>;
//# sourceMappingURL=interface.d.ts.map