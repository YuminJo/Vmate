import { observable } from "../reactivity/solid.js";
export const solidAdapter = (project, arg) => {
    const convert = (signal) => {
        return arg.from(observable(signal));
    };
    return {
        id: project.id,
        customApi: convert(project.customApi),
        settings: convert(project.settings),
        errors: convert(project.errors),
        installed: {
            messageLintRules: convert(project.installed.messageLintRules),
            plugins: convert(project.installed.plugins),
        },
        setSettings: project.setSettings,
        query: {
            messages: {
                create: project.query.messages.create,
                update: project.query.messages.update,
                delete: project.query.messages.delete,
                upsert: project.query.messages.upsert,
                get: project.query.messages.get,
                // get: (args) => {
                // 	const [message, setMessage] = createSignal<Message | undefined>()
                // 	project.query.messages.get.subscribe(args, setMessage)
                // 	return message()
                // },
                getAll: convert(project.query.messages.getAll),
                includedMessageIds: convert(project.query.messages.includedMessageIds),
            },
            messageLintReports: {
                get: project.query.messageLintReports.get,
                getAll: convert(project.query.messageLintReports.getAll),
            },
        },
    };
};
// const x = {} as InlangProjectWithSolidAdapter
// x.query.lintReports.getAll()
// console.log(await x.lint())
