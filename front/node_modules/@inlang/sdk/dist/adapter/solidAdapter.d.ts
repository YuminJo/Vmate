import type { InlangProject, MessageLintReportsQueryApi } from "../api.js";
import { type from as solidFrom } from "../reactivity/solid.js";
import type { MessageQueryApi } from "@inlang/sdk";
export declare const solidAdapter: (project: InlangProject, arg: {
    from: typeof solidFrom;
}) => InlangProjectWithSolidAdapter;
export type InlangProjectWithSolidAdapter = {
    id: InlangProject["id"];
    customApi: () => ReturnType<InlangProject["customApi"]>;
    installed: {
        plugins: () => ReturnType<InlangProject["installed"]["plugins"]>;
        messageLintRules: () => ReturnType<InlangProject["installed"]["messageLintRules"]>;
    };
    errors: () => ReturnType<InlangProject["errors"]>;
    settings: () => ReturnType<InlangProject["settings"]>;
    setSettings: InlangProject["setSettings"];
    query: {
        messages: {
            create: MessageQueryApi["create"];
            update: MessageQueryApi["update"];
            delete: MessageQueryApi["delete"];
            upsert: MessageQueryApi["upsert"];
            get: MessageQueryApi["get"];
            getAll: () => ReturnType<MessageQueryApi["getAll"]>;
            includedMessageIds: () => ReturnType<MessageQueryApi["includedMessageIds"]>;
        };
        messageLintReports: {
            get: MessageLintReportsQueryApi["get"];
            getAll: () => ReturnType<MessageLintReportsQueryApi["getAll"]>;
        };
    };
};
//# sourceMappingURL=solidAdapter.d.ts.map