import type { ValueError } from "@sinclair/typebox/errors";
export * from "./plugins/errors.js";
export * from "./message-lint-rules/errors.js";
export declare class ModuleError extends Error {
    readonly module: string;
    constructor(message: string, options: {
        module: string;
        cause?: Error;
    });
}
/**
 * Error when a Module does not export any plugins or lint rules.
 */
export declare class ModuleHasNoExportsError extends ModuleError {
    constructor(options: {
        module: string;
        cause?: Error;
    });
}
/**
 * Error when a Module cannot be imported.
 */
export declare class ModuleImportError extends ModuleError {
    constructor(options: {
        module: string;
        cause: Error;
    });
}
export declare class ModuleExportIsInvalidError extends ModuleError {
    constructor(options: {
        module: string;
        errors: ValueError[];
    });
}
export declare class ModuleSettingsAreInvalidError extends ModuleError {
    constructor(options: {
        module: string;
        errors: ValueError[];
    });
}
//# sourceMappingURL=errors.d.ts.map