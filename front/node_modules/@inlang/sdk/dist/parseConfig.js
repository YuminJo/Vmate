import { ProjectSettings } from "./versionedInterfaces.js";
import { TypeCompiler } from "@sinclair/typebox/compiler";
export class ParseConfigError extends Error {
    #id = "ParseConfigException";
    constructor(message, cause) {
        super(message);
        this.name = this.#id;
        this.cause = cause;
    }
}
// @ts-ignore - fix after refactor
const ConfigCompiler = TypeCompiler.Compile(ProjectSettings);
export const parseSettings = (config) => {
    if (ConfigCompiler.Check(config)) {
        return {
            data: config,
            error: undefined,
        };
    }
    else {
        return {
            error: new ParseConfigError("The inlang config is not valid.", [...ConfigCompiler.Errors(config)].toString()),
            data: undefined,
        };
    }
};
