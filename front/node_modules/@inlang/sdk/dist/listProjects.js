const ignores = ["node_modules", ".git"];
export const listProjects = async (nodeishFs, from) => {
    // !TODO: Remove this limit once we introduce caching
    const recursionLimit = 5;
    const projects = [];
    async function searchDir(path, depth) {
        if (depth > recursionLimit) {
            return;
        }
        const files = await nodeishFs.readdir(path);
        for (const file of files) {
            const filePath = `${path}/${file}`;
            try {
                const stats = await nodeishFs.stat(filePath);
                if (stats.isDirectory()) {
                    if (ignores.includes(file)) {
                        continue;
                    }
                    if (file.endsWith(".inlang")) {
                        projects.push({ projectPath: filePath });
                    }
                    else {
                        await searchDir(filePath, depth + 1);
                    }
                }
            }
            catch {
                continue;
            }
        }
    }
    await searchDir(from, 0);
    // remove double slashes
    for (const project of projects) {
        project.projectPath = project.projectPath.replace(/\/\//g, "/");
    }
    return projects;
};
