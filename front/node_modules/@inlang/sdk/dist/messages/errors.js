export class MessageVariantDoesNotExistError extends Error {
    #id = "MessageVariantDoesNotExistError";
    constructor(messageId, languageTag) {
        super(`For message '${messageId}' and '${languageTag}', there doesn't exist a variant for this specific matchers.`);
    }
}
export class MessageVariantAlreadyExistsError extends Error {
    #id = "MessageVariantAlreadyExistsError";
    constructor(messageId, languageTag) {
        super(`For message '${messageId}' and '${languageTag}', there already exists a variant for this specific matchers.`);
    }
}
export class MessagePatternsForLanguageTagDoNotExistError extends Error {
    #id = "MessagePatternsForLanguageTagDoNotExistError";
    constructor(messageId, languageTag) {
        super(`For message '${messageId}' there are no patterns with the languageTag '${languageTag}'.`);
    }
}
