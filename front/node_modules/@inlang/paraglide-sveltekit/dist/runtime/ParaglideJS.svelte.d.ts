import { SvelteComponent } from "svelte";
import type { I18n } from "./adapter.server.js";
declare class __sveltets_Render<T extends string> {
    props(): {
        /**
             * Override the language detection with a specific language tag.
             */ languageTag?: T | undefined;
        /**
             * The routing instance to use.
             * You can create one with `createI18n()` from `@inlang/paraglide-sveltekit`.
             */ i18n: I18n<T>;
    };
    events(): {} & {
        [evt: string]: CustomEvent<any>;
    };
    slots(): {
        default: {};
    };
}
export type ParaglideJsProps<T extends string> = ReturnType<__sveltets_Render<T>['props']>;
export type ParaglideJsEvents<T extends string> = ReturnType<__sveltets_Render<T>['events']>;
export type ParaglideJsSlots<T extends string> = ReturnType<__sveltets_Render<T>['slots']>;
/**
 * Automatically detect and manage the language of your page.
 * It also adds `<link rel="alternate">` tags to the head of your page
 */
export default class ParaglideJs<T extends string> extends SvelteComponent<ParaglideJsProps<T>, ParaglideJsEvents<T>, ParaglideJsSlots<T>> {
}
export {};
//# sourceMappingURL=ParaglideJS.svelte.d.ts.map