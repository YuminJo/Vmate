import { type PathDefinitionTranslations } from "@inlang/paraglide-js/internal/adapter-utils";
import type { ParamMatcher } from "@sveltejs/kit";
export type RoutingStrategy<T extends string> = ReturnType<typeof PrefixStrategy<T>>;
export declare function PrefixStrategy<T extends string>(availableLanguageTags: readonly T[], defaultLanguageTag: T, translations: PathDefinitionTranslations, matchers: Record<string, ParamMatcher>, prefixDefaultLanguage: "always" | "never"): {
    getLanguageFromLocalisedPath: (localisedPath: string) => T | undefined;
    getLocalisedPath: (canonicalPath: string, languageTag: T) => string;
    getCanonicalPath: (localisedPath: string, languageTag: T) => string;
};
//# sourceMappingURL=strategy.d.ts.map