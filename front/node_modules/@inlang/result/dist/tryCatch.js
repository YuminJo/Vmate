export function tryCatch(callback) {
    try {
        const callbackResult = callback();
        if (isAsync(callbackResult)) {
            return callbackResult.then((data) => ({ data })).catch(getErrorResponse);
        }
        return { data: callbackResult };
    }
    catch (e) {
        return getErrorResponse(e);
    }
}
const getErrorResponse = (error) => {
    if (error instanceof Error) {
        return { error: error };
    }
    return { error: new Error(`Unknown error has been caught: ${error}`, { cause: error }) };
};
const isAsync = (p) => !!p && typeof p === "object" && typeof p.then === "function";
